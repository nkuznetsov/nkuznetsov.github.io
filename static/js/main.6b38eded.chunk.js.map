{"version":3,"sources":["assets/images/lobster.svg","assets/images/dark_theme_active.svg","assets/images/dark_theme_inactive.svg","assets/models.ts","assets/styles/local.js","components/lobster/src/lobster-renderer.tsx","components/theme-controller/src/theme-controller-renderer.tsx","components/theme-controller/src/theme-controller-container.tsx","components/app/src/app-renderer.tsx","assets/constants.ts","assets/styles/global.js","components/app/src/theme-wrapper.tsx","assets/messages.ts","assets/styles/colors.ts","assets/styles/themes.ts","components/app/src/app-container.tsx","index.js"],"names":["module","exports","ThemeType","createUseStyles","theme","lobster","height","pointerEvents","animationName","animationDuration","animationIterationCount","from","transform","to","themeIcon","width","themeController","padding","name","fontSize","LobsterRenderer","useTheme","styles","localStyles","formatMessage","useIntl","id","src","lobsterImage","alt","className","ThemeControllerRenderer","props","isChecked","type","Dark","Checkbox","icon","DarkThemeInactiveIcon","checkedIcon","DarkThemeActiveIcon","onChange","switchTheme","checked","ThemeControllerContainer","changeTheme","event","target","AppRenderer","Grid","container","style","margin","item","xs","justify","alignContent","defaultThemeType","html","body","fontFamily","app","position","color","foreground","background","textAlign","opacity","ThemeWrapper","globalStyles","children","en","lightTheme","Light","primary","colors","accent","warn","darkTheme","AppContainer","translations","messages","useState","themes","setTheme","locale","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b38eded.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lobster.f5d3f114.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark_theme_active.7fe50f25.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark_theme_inactive.ded2ae8c.svg\";","enum ThemeType {\r\n  Light = 'lightTheme',\r\n  Dark = 'darkTheme'\r\n}\r\n\r\ninterface ITheme {\r\n  type: ThemeType;\r\n  primary: string;\r\n  accent: string;\r\n  warn: string;\r\n  foreground: string;\r\n  background: string;\r\n}\r\n\r\nexport { ThemeType };\r\nexport type { ITheme };\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nexport default createUseStyles(theme => ({\r\n  lobster: {\r\n    height: '25rem',\r\n    pointerEvents: 'none',\r\n    animationName: '$rotate',\r\n    animationDuration: '20s',\r\n    animationIterationCount: 'infinite'\r\n  },\r\n  '@keyframes rotate': {\r\n    from: { transform: 'rotate(0deg)' },\r\n    to: { transform: 'rotate(360deg)' }\r\n  },\r\n  themeIcon: {\r\n    width: '2em',\r\n    height: '2em'\r\n  },\r\n  themeController: {\r\n    padding: '1em'\r\n  },\r\n  name: {\r\n    fontSize: '2em'\r\n  }\r\n}));\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { useTheme } from 'react-jss';\r\nimport lobsterImage from '../../../assets/images/lobster.svg';\r\nimport localStyles from '../../../assets/styles/local';\r\n\r\nexport const LobsterRenderer = () => {\r\n  const theme = useTheme();\r\n  const styles = localStyles(theme);\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <p>{formatMessage({ id: 'home.fluffyLobsterWelcome' })}</p>\r\n      <img src={lobsterImage} alt='lobster' className={styles.lobster} />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ITheme, ThemeType } from '../../../assets/models';\r\nimport { IThemeControllerRendererProps } from './theme-controller-interface';\r\nimport { useTheme } from 'react-jss';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DarkThemeActiveIcon from '../../../assets/images/dark_theme_active.svg';\r\nimport DarkThemeInactiveIcon from '../../../assets/images/dark_theme_inactive.svg';\r\nimport localStyles from '../../../assets/styles/local';\r\n\r\nexport const ThemeControllerRenderer = (\r\n  props: IThemeControllerRendererProps\r\n) => {\r\n  const theme = useTheme() as ITheme;\r\n  const isChecked = theme.type === ThemeType.Dark;\r\n  const styles = localStyles(theme);\r\n\r\n  return (\r\n    <Checkbox\r\n      icon={\r\n        <img\r\n          src={DarkThemeInactiveIcon}\r\n          alt='dark theme active icon'\r\n          className={styles.themeIcon}\r\n        ></img>\r\n      }\r\n      checkedIcon={\r\n        <img\r\n          src={DarkThemeActiveIcon}\r\n          alt='dark theme inactive icon'\r\n          className={styles.themeIcon}\r\n        ></img>\r\n      }\r\n      onChange={props.switchTheme}\r\n      checked={isChecked}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IThemeControllerContainerProps } from './theme-controller-interface';\r\nimport { ThemeControllerRenderer } from './theme-controller-renderer';\r\n\r\nexport const ThemeControllerContainer = (\r\n  props: IThemeControllerContainerProps\r\n) => {\r\n  const { changeTheme } = props;\r\n\r\n  const switchTheme = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeTheme(event.target.checked);\r\n  };\r\n\r\n  return <ThemeControllerRenderer switchTheme={switchTheme} />;\r\n};\r\n","import React from 'react';\r\nimport { IAppRendererProps } from './app-interface';\r\nimport { ITheme } from '../../../assets/models';\r\nimport { Lobster } from '../../lobster';\r\nimport { ThemeController } from '../../theme-controller';\r\nimport { useIntl } from 'react-intl';\r\nimport { useTheme } from 'react-jss';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport localStyles from '../../../assets/styles/local';\r\n\r\nexport const AppRenderer = (props: IAppRendererProps) => {\r\n  const theme = useTheme() as ITheme;\r\n  const styles = localStyles(theme);\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <Grid container style={{ height: '100%', margin: '0' }}>\r\n        <Grid container item xs={2} justify='center' alignContent='flex-start'>\r\n          <Lobster />\r\n        </Grid>\r\n        <Grid container item xs={8} justify='center' alignContent='center'>\r\n          <Grid item>\r\n            <p className={styles.name}>\r\n              {formatMessage({ id: 'home.nikitaKuznetsov' })}\r\n            </p>\r\n            <p>{formatMessage({ id: 'home.moreToCome' })}</p>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={2}\r\n          justify='flex-end'\r\n          alignContent='flex-start'\r\n        >\r\n          <Grid item className={styles.themeController}>\r\n            <ThemeController changeTheme={props.changeTheme} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import { ThemeType } from './models';\r\n\r\nexport const defaultLocale = 'en';\r\nexport const defaultThemeType = ThemeType.Dark;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nexport default createUseStyles(theme => ({\r\n  '@global': {\r\n    html: {\r\n      margin: '0',\r\n      padding: '0'\r\n    },\r\n    body: {\r\n      margin: '0',\r\n      padding: '0',\r\n      fontFamily:\r\n        \"-apple-system, BlinkMacSystemFont, 'Roboto', 'Segoe UI', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n      fontSize: '20px'\r\n    }\r\n  },\r\n  app: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    color: theme.foreground,\r\n    background: theme.background,\r\n    textAlign: 'center',\r\n    animationName: '$fadein',\r\n    animationDuration: '2s'\r\n  },\r\n  '@keyframes fadein': {\r\n    from: { opacity: '0.6' },\r\n    to: { opacity: '1' }\r\n  }\r\n}));\r\n","import React, { FunctionComponent } from 'react';\r\nimport globalStyles from '../../../assets/styles/global';\r\nimport { useTheme } from 'react-jss';\r\n\r\nexport const ThemeWrapper: FunctionComponent = props => {\r\n  const theme = useTheme();\r\n  const styles = globalStyles(theme);\r\n\r\n  return <div className={styles.app}>{props.children}</div>;\r\n};\r\n","export default {\r\n  en: {\r\n    'home.fluffyLobsterWelcome': 'Just a fluffy lobster here for now',\r\n    'home.nikitaKuznetsov': 'Nikita Kuznetsov',\r\n    'home.moreToCome': 'more to come'\r\n  }\r\n};\r\n","export default {\r\n  white: '#FFFFFF',\r\n  darkWhite: '#D6D8DA',\r\n  lightGray: '#FAFBFC',\r\n  gray: '#24292E',\r\n  darkGray: '#1B1D23',\r\n  red: '#DE1F3D',\r\n  purple: '#AD2BA7',\r\n  brown: '#60292E'\r\n};\r\n","import { ITheme, ThemeType } from '../models';\r\nimport colors from './colors';\r\n\r\nconst lightTheme: ITheme = {\r\n  type: ThemeType.Light,\r\n  primary: colors.purple,\r\n  accent: colors.lightGray,\r\n  warn: colors.red,\r\n  foreground: colors.brown,\r\n  background: colors.white\r\n};\r\n\r\nconst darkTheme: ITheme = {\r\n  type: ThemeType.Dark,\r\n  primary: colors.purple,\r\n  accent: colors.darkGray,\r\n  warn: colors.red,\r\n  foreground: colors.darkWhite,\r\n  background: colors.gray\r\n};\r\n\r\nexport default { lightTheme, darkTheme };\r\n","import React, { useState } from 'react';\r\nimport { AppRenderer } from './app-renderer';\r\nimport { defaultThemeType, defaultLocale } from '../../../assets/constants';\r\nimport { IntlProvider } from 'react-intl';\r\nimport { ThemeProvider } from 'react-jss';\r\nimport { ThemeType } from '../../../assets/models';\r\nimport { ThemeWrapper } from './theme-wrapper';\r\nimport messages from '../../../assets/messages';\r\nimport themes from '../../../assets/styles/themes';\r\n\r\nexport const AppContainer = () => {\r\n  const locale = defaultLocale;\r\n  const translations = messages[locale];\r\n  const [theme, setTheme] = useState(themes[defaultThemeType]);\r\n\r\n  const changeTheme = (isChecked: boolean) => {\r\n    setTheme(isChecked ? themes[ThemeType.Dark] : themes[ThemeType.Light]);\r\n  };\r\n\r\n  return (\r\n    <IntlProvider locale={locale} messages={translations}>\r\n      <ThemeProvider theme={{ ...theme }}>\r\n        <ThemeWrapper>\r\n          <AppRenderer changeTheme={changeTheme} />\r\n        </ThemeWrapper>\r\n      </ThemeProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}